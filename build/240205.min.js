function getColorFromLang(e){for(let r in colorNames)if(colorNames[r].eng===e)return r}function init(){scene=new THREE.Scene,renderer=new THREE.WebGLRenderer({antialias:!1}),renderer.setPixelRatio(devicePixelRatio);let e=document.getElementById("container");renderer.setClearColor(displayColors.background),e.appendChild(renderer.domElement),renderer.domElement.style.zIndex="-1",camera=new THREE.OrthographicCamera(-M.var.zoom,M.var.zoom,M.var.zoom,-M.var.zoom,1,1e3),camera.position.set(0,0,35),camera.lookAt(0,0,0),raycaster=new THREE.Raycaster,mouse=new THREE.Vector2,weave=new weavedraft,updateCamera(),createTableSnippet(formatTextforTable(),displayColors.ground),console.log(weave),onWindowResize(),window.addEventListener("resize",onWindowResize,!1)}function animate(){requestAnimationFrame(animate),render()}function render(){renderer.render(scene,camera)}function onWindowResize(){updateCamera(),styleSquareDiv(),styleTextUpdate(),render()}function updateCamera(){let e=new THREE.Box3,r=e.getSize(new THREE.Vector3),t=e.getCenter(new THREE.Vector3);r=new THREE.Vector3(58,59,10),t=new THREE.Vector3(1.5,-9,5),DIM.x=DIM.y=Math.min(window.innerWidth,window.innerHeight),renderer.setSize(DIM.x,DIM.y);let a,o=DIM.x/DIM.y,l=r.x/r.y,i=1.4;l>o?(a=r.x/i,camera.right=a,camera.top=a/o,camera.bottom=-a/o):(a=r.y/i,camera.top=a,camera.bottom=-a,camera.left=-a*o,camera.right=a*o),camera.position.set(t.x,t.y,35),camera.lookAt(t),camera.updateProjectionMatrix()}function saveCanvas(e=M.seed){let r=e+".png",t=renderer.domElement.toDataURL(),a=document.createElement("a");a.href=t,a.download=r,a.target="_blank",document.body.appendChild(a),a.click(),document.body.removeChild(a),console.log("saved Canvas")}function saveLargeCanvas(e,r=2400){let t=document.createElement("canvas");t.width=r,t.height=r;let a=new THREE.WebGLRenderer({canvas:t,antialias:!1});a.setPixelRatio(devicePixelRatio),a.setPixelRatio(2),a.setSize(r,r),a.setClearColor(displayColors.background),a.render(scene,camera);let o=t.toDataURL("image/png"),l=document.createElement("a");l.href=o,l.download=e+".png",l.target="_blank",document.body.appendChild(l),l.click(),document.body.removeChild(l),a.dispose(),console.log("Saved large canvas")}function saveText(e=M.seed){var r=wPat_print,t=new Blob([r],{type:"text/plain"}),a=URL.createObjectURL(t),o=document.createElement("a");o.href=a,o.download=e+".txt",document.body.appendChild(o),o.click(),document.body.removeChild(o),console.log("Saved Image ")}function createText(){const e=document.querySelector("canvas"),r=e.parentElement;let t=document.getElementById("overlay");t||(t=document.createElement("div"),t.id="overlay",t.style.position="absolute",t.style.top=e.offsetTop+"px",t.style.left=e.offsetLeft+"px",t.style.width=e.offsetWidth+"px",t.style.height=e.offsetHeight+"px",r.appendChild(t));const a=document.createElement("div");a.id="table-wrapper";let o=["Pattern:","Colors:","Palette:","Bindings:","Spacing:","Instructions:"],l=0;const i=document.createElement("table");for(let e=0;e<3;e++){const e=document.createElement("tr");for(let r=0;r<2;r++){const r=document.createElement("td");r.textContent=`${o[l]} ${l}`,e.appendChild(r),l++}i.appendChild(e)}i.style.width="100%",i.style.height="100%",i.style.borderCollapse="collapse",a.appendChild(i),t.appendChild(a)}function formatJson(){delete M.var.warpColors,delete M.var.weftColors,delete M.var.theRules,delete M.var.activeColor,delete M.var.inactiveColor}function saveJson(e=M.seed){let r=e+".json",t=M;downloadFile(t,r),console.log("saved Json!")}function downloadFile(e,r){var t=r.split("."),a=t[t.length-1],o="json"==a?new Blob([JSON.stringify(e,null,2).replace(/\\n/g,"\n").replace(/\\"/g,'"')],{type:"application/json"}):new Blob([Papa.unparse(e)],{type:"text/plain"}),l=document.createElement("a");document.body.appendChild(l),l.download=r,l.href=window.URL.createObjectURL(o),l.click(),l.parentNode.removeChild(l)}function addGUI(){}function rand(e=0,r=1){return e+(r-e)*R.random_dec()}function rInt(e,r){return e<r?Math.floor(rand(e,r+1)):Math.floor(rand(r,e+1))}function randChoice(e){return e[rInt(0,e.length-1)]}function rWeightedItems(e,r){let t={select:rand(),index:null,sum:0,mode:null,tempMin:0,tempMax:0};for(let e=0;e<r.length;e++)t.sum+=r[e];for(let a=0;a<e.length;a++)t.tempMax=r[a]/t.sum+t.tempMin,t.tempMin<=t.select&&t.select<t.tempMax&&0!=r[a]&&(t.index=a),t.tempMin+=r[a]/t.sum;return e[t.index]}function genTokenData(e=0){let r={},t="0x";for(var a=0;a<64;a++)t+=Math.floor(16*seedRand()).toString(16);return r.hash=t,r.tokenId=(1e6*e+Math.floor(1e3*seedRand())).toString(),r}function sfc32(e,r,t,a){return function(){e>>>=0,r>>>=0,t>>>=0,a>>>=0;var o=e+r|0;return e=r^r>>>9,r=t+(t<<3)|0,t=t<<21|t>>>11,a=a+1|0,o=o+a|0,t=t+o|0,(o>>>0)/4294967296}}function cyrb128(e){let r=1779033703,t=3144134277,a=1013904242,o=2773480762;for(let l,i=0;i<e.length;i++)l=e.charCodeAt(i),r=t^Math.imul(r^l,597399067),t=a^Math.imul(t^l,2869860233),a=o^Math.imul(a^l,951274213),o=r^Math.imul(o^l,2716044179);return r=Math.imul(a^r>>>18,597399067),t=Math.imul(o^t>>>22,2869860233),a=Math.imul(r^a>>>17,951274213),o=Math.imul(t^o>>>19,2716044179),[(r^t^a^o)>>>0,(t^r)>>>0,(a^r)>>>0,(o^r)>>>0]}function triangleWave(e,r,t,a){if(t<=0)throw new Error("Height must be positive");const o=(e+a)*r,l=2*t-2,i=o%l;return t%2==0?i<t?i:i<l-t?t-1:i-l:i<t?i:l-i}function shuffleArray(e){for(let r=e.length-1;r>0;r--){const t=Math.floor(rand(0,r)),a=e[r];e[r]=e[t],e[t]=a}return e}function shuffleArrayRandom(e){for(let r=e.length-1;r>0;r--){const t=Math.floor(Math.random()*r),a=e[r];e[r]=e[t],e[t]=a}return e}function fetchColors(e,r,t,a){let o,l,i=M.var.displayMode;if("Original"==i)o=1===r[t][a]?M.var.activeColor:M.var.inactiveColor,l=M.var.activeColor;else if("Inverse"==i||"Grid"==i)1===r[t][a]?(o=displayColors[e].active.cell,l=displayColors[e].active.edge):(o=displayColors[e].inactive.cell,l=displayColors[e].inactive.edge);else if("Weave Colors"==i)if("tieUp"==e)1===r[t][a]?(o=displayColors[e].active.cell,l=displayColors[e].active.edge):(o=displayColors[e].inactive.cell,l=displayColors[e].inactive.edge);else{let i;"threading"==e?i=a%displayColors[e].active.cell.length:"treadling"==e&&(i=t%displayColors[e].active.cell.length);let n=displayColors[e].active.cell[i];1===r[t][a]?(o=n,l=n==displayColors.background&&displayColors.tieUp.inactive.cell):(o=displayColors[e].inactive.cell,l=displayColors[e].inactive.edge)}return{cell:o,edge:l}}function toggleText(){"block"==squareDiv.style.display?squareDiv.style.display="none":squareDiv.style.display="block"}function styleSquareDiv(){let e=DIM.x;M.var.textVisible?squareDiv.style.display="block":squareDiv.style.display="none",squareDiv.style.position="absolute",squareDiv.style.height=e+"px",squareDiv.style.width=e+"px",squareDiv.style.left="50%",squareDiv.style.top="50%",squareDiv.style.transform="translate(-50%, -50%)",styleInnerDiv()}function styleInnerDiv(){innerDiv.style.position="absolute",innerDiv.style.bottom="0",innerDiv.style.width="68.5%",innerDiv.style.height="14.8%",innerDiv.style.left="50%",innerDiv.style.transform="translateX(-50%)",innerDiv.style.zIndex="5"}function createTableSnippet(e=["","","","",""],r="black",t=innerDiv){let a=["Pattern:   ","Warp Colors:   ","Palette:   ","Weft Colors:   ","Spacing:   ","Bindings:   "];for(let r=0;r<e.length;r++)a[r]+=e[r];r instanceof THREE.Color&&(r=r.getHexString());let o=document.createElement("table"),l=document.createElement("tbody");o.appendChild(l),o.style.width="100%",o.style.tableLayout="fixed",o.style.zIndex="5";var i=[[a[0],a[1]],[a[2],a[3]],[a[4],a[5]]];i.forEach(function(e,t){let a=document.createElement("tr");e.forEach(function(e){let t=document.createElement("td");t.innerText=e,t.style.color="#"+r,t.style.whiteSpace="nowrap",a.appendChild(t),tabelCells.push(t)}),l.appendChild(a)}),t?t.appendChild(o):console.error("Parent element not found.")}function styleTextUpdate(){let e;e=DIM.x>1e3?"18px":DIM.x>600?"16px":DIM.x>450?"14px":"12px",tabelCells.forEach(function(r){r.style.fontSize=e,DIM.x<300?r.style.display="none":r.style.display="table-cell"})}function formatTextforTable(){M.var.colorWarpNames,M.var.colorWeftNames;let e="",r="",t=[];for(let r of M.var.colorWarpNames)e+=`${r}, `;e=e.slice(0,-1),e=e.slice(0,-1);for(let e of M.var.colorWeftNames)r+=`${e}, `;return r=r.slice(0,-1),r=r.slice(0,-1),t[0]=M.var.preset,t[1]=e,t[2]=M.var.colorSelectName,t[3]=r,t[4]=M.var.verticalSpacingType,t[5]=displayColors.backgroundName,t}let credits=shuffleArrayRandom(["Benjamin Aranda","Chris Lasch","Jesse Bassett","Joaquin Bonifaz"]);console.log("Enlace by ArandaLasch"),console.log(`${credits[0]}, ${credits[1]}, ${credits[2]}, ${credits[3]}`),console.log("In collaboration with Trame and Maison Louis Drucker "),console.log("");class Random{constructor(){this.useA=!1;let e=function(e){let r=parseInt(e.substr(0,8),16),t=parseInt(e.substr(8,8),16),a=parseInt(e.substr(16,8),16),o=parseInt(e.substr(24,8),16);return function(){r|=0,t|=0,a|=0,o|=0;let e=(r+t|0)+o|0;return o=o+1|0,r=t^t>>>9,t=a+(a<<3)|0,a=a<<21|a>>>11,a=a+e|0,(e>>>0)/4294967296}};this.prngA=new e(tokenData.hash.substr(2,32)),this.prngB=new e(tokenData.hash.substr(34,32));for(let e=0;e<1e6;e+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}random_bool(e){return this.random_dec()<e}random_num(e,r){return e+(r-e)*this.random_dec()}random_int(e,r){return Math.floor(this.random_num(e,r+1))}}R=new Random;let gui,newDiv=document.createElement("div");newDiv.id="container",newDiv.style.display="inline-block",newDiv.style.margin="0",newDiv.style.width="100%",newDiv.style.height="100%",document.body.appendChild(newDiv),document.documentElement.style.overflow="hidden",document.body.style.overflow="hidden";let renderer,camera,scene,raycaster,mouse,myCa,devicePixelRatio=window.devicePixelRatio||1,wPat="",wPat_print="",DIM={x:Math.min(window.innerWidth,window.innerHeight)};DIM.y=DIM.x;let tabelCells=[],squareDiv=document.createElement("div"),innerDiv=document.createElement("div");squareDiv.appendChild(innerDiv),newDiv.appendChild(squareDiv);let weave,displayColors={treadling:{active:{cell:16777215,edge:0},inactive:{cell:16777215,edge:0}},tieUp:{active:{cell:16777215,edge:0},inactive:{cell:16777215,edge:0}},threading:{active:{cell:16777215,edge:0},inactive:{cell:16777215,edge:0}},background:0,backgroundName:"White"},druckerSatinColors={oliveGreen:3686464,tenderGreen:5335383,appleGreen:10141309,emeraldGreen:1206126,purpleMaroon:4859707,carminRed:6041134,scarletRed:10625597,rubyRed:5975353,terracotta:8929589,pink:10966369,lightPink:12019057,black:2171945,grey:6909033,blueGrey:12566711,white:14870756,royalBlue:2243701,ultraMarine:1648699,lavenderBlue:3489100,lagoonBlue:30409,softBlue:5604238,waterGreen:10663343,chocolate:3880760,weatheredGold:6246469,beige:10060646,taupe:10390910,ivory:14339747,orange:13128752,peach:14527854,yellowTumeric:13080618,brightYellow:14660864},colorNames={oliveGreen:{eng:"Olive Green",fr:"Vert Olive"},tenderGreen:{eng:"Tender Green",fr:"Vert Tendre"},appleGreen:{eng:"Apple Green",fr:"Vert Pomme"},emeraldGreen:{eng:"Emerald Green",fr:"Vert Emeraude"},purpleMaroon:{eng:"Purple Maroon",fr:"Bordeaux Violet"},carminRed:{eng:"Carmin Red",fr:"Rouge Carmin"},scarletRed:{eng:"Scarlet Red",fr:"Rouge Ecarlate"},rubyRed:{eng:"Ruby Red",fr:"Rouge Rubis"},terracotta:{eng:"Terracotta",fr:"Terracotta"},pink:{eng:"Pink",fr:"Rose"},lightPink:{eng:"Light Pink",fr:"Rose Pastel"},black:{eng:"Black",fr:"Noir"},grey:{eng:"Grey",fr:"Gris"},blueGrey:{eng:"Blue Grey",fr:"Gris Bleute"},white:{eng:"White",fr:"Blanc"},royalBlue:{eng:"Royal Blue",fr:"Bleu Royal"},ultraMarine:{eng:"Ultra Marine",fr:"Bleu Outrener"},lavenderBlue:{eng:"Lavender Blue",fr:"Bleu Lavande"},lagoonBlue:{eng:"Lagoon Blue",fr:"Bleu Lagon"},softBlue:{eng:"Soft Blue",fr:"Bleu Doux"},waterGreen:{eng:"Water Green",fr:"Vert D'Eau"},chocolate:{eng:"Chocolate",fr:"Chocolat"},weatheredGold:{eng:"Weathered Gold",fr:"Or Patine"},beige:{eng:"Beige",fr:"Beige"},taupe:{eng:"Taupe",fr:"Taupe"},ivory:{eng:"Ivory",fr:"Ivoire"},orange:{eng:"Orange",fr:"Orange"},peach:{eng:"Peach",fr:"Peche"},yellowTumeric:{eng:"Yellow Tumeric",fr:"Jaune Curcuma"},brightYellow:{eng:"BrightYellow",fr:"Jaune Vif"}},colorCull=[["peach","brightYellow"],["rubyRed","purpleMaroon"],["tenderGreen","weatheredGold"],["royalBlue","lavenderBlue"],["oliveGreen","lavenderBlue"],["chocolate","oliveGreen"],["carminRed","rubyRed"]],palettes={2:[{name:"Light",p:1,arr:["white","scarletRed"]},{name:"Dark",p:1,arr:["black","purpleMaroon"]},{name:"Warm",p:1,arr:["yellowTumeric","lagoonBlue"]},{name:"Warm",p:1,arr:["scarletRed","softBlue"]},{name:"Warm",p:1,arr:["terracotta","beige"]},{name:"Cool",p:1,arr:["waterGreen","black"]},{name:"Cool",p:1,arr:["waterGreen","royalBlue"]},{name:"Cool",p:1,arr:["emeraldGreen","waterGreen"]},{name:"Mix",p:1,arr:["oliveGreen","taupe"]},{name:"Mix",p:1,arr:["white","black"]},{name:"Mix",p:1,arr:["softBlue","rubyRed"]},{name:"Cool",p:1,arr:["tenderGreen","white"]},{name:"Mix",p:1,arr:["black","ivory"]},{name:"Mix",p:1,arr:["ultraMarine","ivory"]},{name:"Dark",p:1,arr:["black","weatheredGold"]},{name:"Mix",p:1,arr:["oliveGreen","lightPink"]},{name:"Warm",p:1,arr:["orange","peach"]},{name:"Cool",p:1,arr:["lagoonBlue","orange"]},{name:"Cool",p:1,arr:["waterGreen","softBlue"]},{name:"Light",p:1,arr:["grey","ivory"]},{name:"Light",p:1,arr:["pink","ivory"]},{name:"Light",p:1,arr:["white","grey"]}],3:[{name:"Light",p:1,arr:["white","weatheredGold","grey"]},{name:"Dark",p:1,arr:["carminRed","lavenderBlue","emeraldGreen"]},{name:"Warm",p:1,arr:["brightYellow","waterGreen","black"]},{name:"Warm",p:1,arr:["ultraMarine","orange","tenderGreen"]},{name:"Cool",p:1,arr:["royalBlue","taupe","blueGrey"]},{name:"Mix",p:1,arr:["terracotta","appleGreen","black"]},{name:"Mix",p:1,arr:["taupe","pink","emeraldGreen"]},{name:"Mix",p:1,arr:["oliveGreen","ivory","grey"]},{name:"Mix",p:1,arr:["oliveGreen","lightPink","appleGreen"]},{name:"Warm",p:1,arr:["oliveGreen","yellowTumeric","beige"]}],4:[{name:"Light",p:1,arr:["white","softBlue","emeraldGreen","scarletRed"]},{name:"Light",p:1,arr:["lagoonBlue","royalBlue","orange","white"]},{name:"Light",p:1,arr:["terracotta","ultraMarine","lightPink","lagoonBlue"]},{name:"Dark",p:1,arr:["weatheredGold","rubyRed","ultraMarine","lagoonBlue"]},{name:"Warm",p:1,arr:["ivory","taupe","blueGrey","appleGreen"]},{name:"Warm",p:1,arr:["scarletRed","rubyRed","purpleMaroon","white"]},{name:"Cool",p:1,arr:["waterGreen","tenderGreen","lightPink","purpleMaroon"]},{name:"Cool",p:1,arr:["lagoonBlue","ivory","brightYellow","purpleMaroon"]},{name:"Mix",p:1,arr:["black","weatheredGold","grey","appleGreen"]},{name:"Mix",p:1,arr:["emeraldGreen","scarletRed","taupe","chocolate"]},{name:"Mix",p:1,arr:["oliveGreen","waterGreen","beige","scarletRed"]},{name:"Mix",p:1,arr:["grey","carminRed","rubyRed","peach"]},{name:"Cool",p:1,arr:["tenderGreen","ivory","weatheredGold","oliveGreen"]},{name:"Warm",p:1,arr:["rubyRed","terracotta","yellowTumeric","peach"]},{name:"Mix",p:1,arr:["tenderGreen","terracotta","ivory","taupe"]}],5:[{name:"Light",p:1,arr:["waterGreen","white","beige","terracotta","ultraMarine"]},{name:"Dark",p:1,arr:["chocolate","grey","blueGrey","ivory","weatheredGold"]},{name:"Warm",p:1,arr:["peach","orange","tenderGreen","scarletRed","waterGreen"]},{name:"Warm",p:1,arr:["terracotta","pink","scarletRed","ivory","grey"]},{name:"Red",p:1,arr:["grey","orange","beige","ultraMarine","weatheredGold"]},{name:"Cool",p:1,arr:["royalBlue","ultraMarine","lavenderBlue","softBlue","waterGreen"]},{name:"Mix",p:1,arr:["emeraldGreen","scarletRed","taupe","chocolate","oliveGreen"]},{name:"Mix",p:1,arr:["oliveGreen","waterGreen","beige","scarletRed","lightPink"]},{name:"Cool",p:1,arr:["tenderGreen","ivory","weatheredGold","oliveGreen","lavenderBlue"]},{name:"Warm",p:1,arr:["rubyRed","terracotta","yellowTumeric","peach","pink"]},{name:"Mix",p:1,arr:["tenderGreen","terracotta","ivory","taupe","weatheredGold"]}]},spacingTypes=["Standard","Tight","Close"],threadingPatternTypes=["twill","triWave","vPattern","rand"],treadlingPatternTypes=["twill","triWave","vPattern","rand"],colorPalettes=["random","analogous","fromArray","fromSelected"],presetTypes=["None","Duochrome","Figure","Linear","Field"],colorArrayNames=["Red","Yellow","Blue","Mix","Light","Dark"],colorSelectNames=["Warm","Cool","Mix","Light","Dark"],layouts=["Original","Tight"],displayModes=["Original","Inverse","Grid","Weave Colors"],M={var:{}};if(M.var={zoom:30,cellSize:1,activeColor:new THREE.Color(9803157),inactiveColor:new THREE.Color(15658734),backgroundColor:new THREE.Color(15658734),warpColors:[],weftColors:[],theRules:[0,0,0,0,0,0,0,0,1,0,0,0,0,0],maxGen:2,NUM_SHAFTS:8,NUM_THREADS:50,NUM_TREADLES:0,NUM_PICKS:0,startX:-27,startY:22,verticalSpacingType:rWeightedItems(spacingTypes,[1,2,0]),verticalSpacing:rWeightedItems([1.25,1,1],[1,2,0]),threadingPattern:rWeightedItems(threadingPatternTypes,[1,1,0,.1]),threadingSlope:rWeightedItems([.5,1,2],[1,1,1]),threadingOffset:1,threadingTranslate:0,threadingMirrorPattern:!1,threadingMirrorColor:!1,treadlingPattern:rWeightedItems(treadlingPatternTypes,[1,1,0,.1]),treadlingSlope:rWeightedItems([.5,1,2],[1,1,1]),treadlingOffset:1,treadlingTranslate:0,treadlingMirrorPattern:!1,treadlingMirrorColor:!1,colorSelectName:rWeightedItems(colorSelectNames,[1,1,1,1,1]),colorArrayName:rWeightedItems(colorArrayNames,[1,1,1,1,1,1]),colorPalette:rWeightedItems(colorPalettes,[0,0,0,1]),colorWeftCount:rWeightedItems([1,2,3],[1,1,1]),colorWarpCount:rWeightedItems([1,2,3],[1,1,1]),colorWarp:[],colorWeft:[],colorWarpNames:[],colorWeftNames:[],colorMaterial:rWeightedItems(["Satin","Glossy"],[1,0]),drawEdges:!1,passedLengthTest:!0,maxRun:8,preset:rWeightedItems(presetTypes,[0,30,15,20,35]),displayMode:rWeightedItems(displayModes,[0,35,55,10]),layout:rWeightedItems(layouts,[0,1]),threadingPosX:0,threadingPosY:0,tieUpPosX:0,tieUpPosY:0,treadlingPosX:0,treadlingPosY:0,colorWarpPosX:0,colorWarpPosY:0,colorWeftPosX:0,colorWeftPosY:0,drawdownPosX:0,drawdownPosY:0,colorWarpVisible:!0,colorWeftVisible:!1,textVisible:!1},M.var.NUM_TREADLES=M.var.NUM_SHAFTS,M.var.NUM_PICKS=M.var.NUM_THREADS,"Duochrome"==M.var.preset?(M.var.colorWeftCount=1,M.var.colorWarpCount=1):"Figure"==M.var.preset?(R.random_bool(-1)?(M.var.colorWeftCount=1,M.var.colorWarpCount=rWeightedItems([2,3],[1.25,1])):(M.var.colorWeftCount=rWeightedItems([2,3],[1,0]),M.var.colorWarpCount=1),M.var.threadingPattern=rWeightedItems(["twill","triWave"],[1,3]),M.var.threadingSlope=rWeightedItems([.5,1],[1.5,.8]),M.var.treadlingPattern=rWeightedItems(["twill","triWave"],[1,3]),M.var.treadlingSlope=rWeightedItems([.5,1],[1.5,.8])):"Linear"==M.var.preset?R.random_bool(-1)?(M.var.colorWeftCount=1,M.var.colorWarpCount=rWeightedItems([2,3],[1.25,1]),M.var.treadlingPattern=rWeightedItems(["twill","triWave"],[1,1]),M.var.treadlingSlope=rWeightedItems([1,2],[.5,1.5]),M.var.verticalSpacingType=rWeightedItems(spacingTypes,[1.1,.5,0])):(M.var.colorWeftCount=rWeightedItems([2,3],[1,1.5]),M.var.colorWarpCount=1,M.var.verticalSpacingType=rWeightedItems(spacingTypes,[1.2,.5,0]),M.var.threadingPattern=rWeightedItems(["twill","triWave"],[1,1]),M.var.threadingSlope=2,M.var.treadlingPattern=rWeightedItems(["twill","triWave"],[1,1]),M.var.treadlingSlope=rWeightedItems([1,2],[.5,1.5])):"Field"==M.var.preset&&(M.var.colorWarpCount=rWeightedItems([2,3],[1.25,1]),M.var.colorWeftCount=rWeightedItems([2,3],[1.25,1]),M.var.threadingPattern=rWeightedItems(["twill","triWave","rand"],[1,1,1]),M.var.threadingSlope=rWeightedItems([.5,1,2],[1,1,1]),M.var.treadlingPattern=rWeightedItems(["twill","triWave","rand"],[1,1,1]),M.var.treadlingSlope=rWeightedItems([.5,1,2],[1,1,1]),M.var.colorWarpCount+M.var.colorWeftCount==6&&M.var.colorWeftCount--),"Close"==M.var.verticalSpacingType?M.var.verticalSpacing=1:"Tight"==M.var.verticalSpacingType?M.var.verticalSpacing=1.25:"Standard"==M.var.verticalSpacingType&&(M.var.verticalSpacing=1.5),"Original"==M.var.layout)M.var.threadingPosX=0,M.var.threadingPosY=0,M.var.tieUpPosX=0,M.var.tieUpPosY=0,M.var.treadlingPosX=0,M.var.treadlingPosY=0,M.var.colorWarpPosX=0,M.var.colorWarpPosY=0,M.var.colorWeftPosX=0,M.var.colorWeftPosY=0,M.var.drawdownPosX=0,M.var.drawdownPosY=0,M.var.colorWarpVisible=!0,M.var.colorWeftVisible=!0;else if("Tight"==M.var.layout){let e=2,r=0;M.var.threadingPosX=0,M.var.threadingPosY=-e,M.var.tieUpPosX=-e,M.var.tieUpPosY=-e,M.var.treadlingPosX=-e+r,M.var.treadlingPosY=0,M.var.colorWarpPosX=0,M.var.colorWarpPosY=-e-1,M.var.colorWeftPosX=-e-2+r,M.var.colorWeftPosY=0,M.var.drawdownPosX=r,M.var.drawdownPosY=0,M.var.colorWarpVisible=!1,M.var.colorWeftVisible=!1}console.log("M",M);class squareGrid{constructor(e,r,t,a,o,l,i){this.name=e,this.position=new THREE.Vector2(r,t),this.size=new THREE.Vector2(a,o),this.length=a*o,this.pattern=[[]],this.mesh=[[]],this.posOffset=[[]],this.offSet={x:l,y:i}}}class weavedraft{constructor(){this.threading=new squareGrid("threading",M.var.startX+M.var.threadingPosX,M.var.startY+M.var.threadingPosY,M.var.NUM_SHAFTS,M.var.NUM_THREADS,1,1),this.tieUp=new squareGrid("tieUp",M.var.NUM_THREADS*M.var.cellSize+2+M.var.startX+M.var.tieUpPosX,M.var.startY+M.var.tieUpPosY,M.var.NUM_SHAFTS,M.var.NUM_TREADLES,1,1),this.treadling=new squareGrid("treadling",M.var.NUM_THREADS*M.var.cellSize+2+M.var.startX+M.var.treadlingPosX,-M.var.NUM_SHAFTS*M.var.cellSize-2+M.var.startY+M.var.treadlingPosY,M.var.NUM_PICKS,M.var.NUM_TREADLES,1,M.var.verticalSpacing),this.colorWarp=new squareGrid("colorWarp",M.var.startX+M.var.colorWarpPosX,M.var.startY+2+M.var.colorWarpPosY,1,M.var.NUM_THREADS,1,1),this.colorWeft=new squareGrid("colorWeft",M.var.NUM_THREADS+2+M.var.NUM_TREADLES+2+M.var.startX+M.var.colorWeftPosX,-M.var.NUM_SHAFTS*M.var.cellSize-2+M.var.startY+M.var.colorWeftPosY,M.var.NUM_PICKS,1,1,M.var.verticalSpacing),this.drawdownWarp=new squareGrid("drawdownWarp",M.var.startX+M.var.drawdownPosX,-M.var.NUM_SHAFTS*M.var.cellSize-2+M.var.startY+M.var.drawdownPosY,M.var.NUM_PICKS,M.var.NUM_PICKS,1,M.var.verticalSpacing),this.drawdownWeft=new squareGrid("drawdownWeft",M.var.startX+M.var.drawdownPosX,-M.var.NUM_SHAFTS*M.var.cellSize-2+M.var.startY+M.var.drawdownPosY,M.var.NUM_PICKS,M.var.NUM_PICKS,1,M.var.verticalSpacing),this.drawdownCheckCount=0,this.resetPattern(this.threading),this.resetPattern(this.tieUp),this.resetPattern(this.treadling),this.managePattern(),this.getColorGridS(),this.getGoodDisplayColors(),this.offsetPattern(this.threading),this.offsetPattern(this.tieUp),this.offsetPattern(this.treadling),this.offsetPattern(this.colorWarp),this.offsetPattern(this.colorWeft),this.offsetPattern(this.drawdownWarp),this.offsetPattern(this.drawdownWeft),this.theRules=M.var.theRules,this.caTieUpGrid(),this.visualizeGrid(this.threading),this.visualizeGrid(this.tieUp),this.visualizeGrid(this.treadling),this.visualizeColorGrids(),this.computeDrawdown(),this.visualizeDrawdown()}managePattern(){"twill"==M.var.threadingPattern?this.twillPattern(this.threading):"triWave"==M.var.threadingPattern?this.triWavePattern(this.threading):"vPattern"==M.var.threadingPattern?this.vPattern(this.threading):"rand"==M.var.threadingPattern&&this.randPattern(this.threading),"twill"==M.var.treadlingPattern?this.twillPattern(this.treadling):"triWave"==M.var.treadlingPattern?this.triWavePattern(this.treadling):"vPattern"==M.var.treadlingPattern?this.vPattern(this.treadling):"rand"==M.var.treadlingPattern&&this.randPattern(this.treadling)}resetPattern(e){const r=e.size.x,t=e.size.y;let a=[];for(let e=0;e<r;e++){let e=[];for(let r=0;r<t;r++)e.push(0);a.push(e)}e.pattern=a,e.mesh=[...a]}getColorGridS(e=M.var.colorWarpCount,r=M.var.colorWeftCount,t=M.var.colorPalette,a="eng"){this.colorWarp.palette=[],this.colorWarp.pattern=[],this.colorWarp.count=e,this.colorWeft.palette=[],this.colorWeft.pattern=[],this.colorWeft.count=r;let o=druckerSatinColors,l=[],i=e+r;l=this.pickSelectedColors(o,i),console.log("selectedColors",l);let n,s=0;for(let e=0;e<this.colorWarp.count;e++)n=l[s],this.colorWarp.palette.push(n.color),M.var.colorWarpNames.push(colorNames[n.name][a]),s++;for(let e=0;e<this.colorWeft.count;e++)n=l[s],this.colorWeft.palette.push(n.color),M.var.colorWeftNames.push(colorNames[n.name][a]),s++;M.var.colorWarp=this.colorWarp.palette,M.var.colorWeft=this.colorWeft.palette;let d=0;for(let e=0;e<this.colorWarp.length;e++)this.colorWarp.pattern.push(this.colorWarp.palette[d]),d++,d==this.colorWarp.palette.length&&(d=0);let c=0;for(let e=0;e<this.colorWeft.length;e++)this.colorWeft.pattern.push(this.colorWeft.palette[c]),c++,c==this.colorWeft.palette.length&&(c=0)}getGoodDisplayColors(){let e=0,r=!0;for(;r;)if(this.getdisplayColors(),r=this.checkDisplayColors(),e++,e>1e3){r=!1;break}}checkDisplayColors(){for(let e=0;e<colorCull.length;e++)if(colorCull[e].includes(getColorFromLang(displayColors.solidName))&&colorCull[e].includes(getColorFromLang(displayColors.groundName)))return!0;return!1}getdisplayColors(){if("Original"==M.var.displayMode)displayColors.treadling.active.cell=M.var.activeColor,displayColors.treadling.active.edge=M.var.activeColor,displayColors.treadling.inactive.cell=M.var.inactiveColor,displayColors.treadling.inactive.edge=M.var.activeColor,displayColors.tieUp.active.cell=M.var.activeColor,displayColors.tieUp.active.edge=M.var.activeColor,displayColors.tieUp.inactive.cell=M.var.inactiveColor,displayColors.tieUp.inactive.edge=M.var.activeColor,displayColors.threading.active.cell=M.var.activeColor,displayColors.threading.active.edge=M.var.activeColor,displayColors.threading.inactive.cell=M.var.inactiveColor,displayColors.threading.inactive.edge=M.var.activeColor,displayColors.background=M.var.backgroundColor,displayColors.solid=M.var.activeColor,displayColors.ground=M.var.inactiveColor;else if("Inverse"==M.var.displayMode){let e,r,t=16711935,a=16711680;1==this.colorWeft.palette.length&&this.colorWarp.palette.length>=2?(r=0,e=randChoice(Array.from({length:this.colorWeft.palette.length},(e,r)=>r)),t=this.colorWarp.palette[r],a=this.colorWeft.palette[e],displayColors.backgroundName=M.var.colorWarpNames[r],displayColors.solidName=M.var.colorWarpNames[r],displayColors.groundName=M.var.colorWeftNames[e]):(r=0,e=randChoice(Array.from({length:this.colorWarp.palette.length},(e,r)=>r)),t=this.colorWeft.palette[r],a=this.colorWarp.palette[e],displayColors.backgroundName=M.var.colorWeftNames[r],displayColors.solidName=M.var.colorWeftNames[r],displayColors.groundName=M.var.colorWarpNames[e]),displayColors.treadling.active.cell=a,displayColors.treadling.active.edge=!1,displayColors.treadling.inactive.cell=t,displayColors.treadling.inactive.edge=!1,displayColors.tieUp.active.cell=a,displayColors.tieUp.active.edge=!1,displayColors.tieUp.inactive.cell=t,displayColors.tieUp.inactive.edge=!1,displayColors.threading.active.cell=a,displayColors.threading.active.edge=!1,displayColors.threading.inactive.cell=t,displayColors.threading.inactive.edge=!1,displayColors.background=t,displayColors.solid=t,displayColors.ground=a}else if("Grid"==M.var.displayMode){let e,r,t=16711935,a=16711680;1==this.colorWeft.palette.length&&this.colorWarp.palette.length>=2?(r=randChoice(Array.from({length:this.colorWarp.palette.length},(e,r)=>r)),e=randChoice(Array.from({length:this.colorWeft.palette.length},(e,r)=>r)),t=this.colorWarp.palette[r],a=this.colorWeft.palette[e],displayColors.backgroundName=M.var.colorWarpNames[r],displayColors.solidName=M.var.colorWarpNames[r],displayColors.groundName=M.var.colorWeftNames[e]):(r=randChoice(Array.from({length:this.colorWeft.palette.length},(e,r)=>r)),e=randChoice(Array.from({length:this.colorWarp.palette.length},(e,r)=>r)),t=this.colorWeft.palette[r],a=this.colorWarp.palette[e],displayColors.backgroundName=M.var.colorWeftNames[r],displayColors.solidName=M.var.colorWeftNames[r],displayColors.groundName=M.var.colorWarpNames[e]),displayColors.treadling.active.cell=t,displayColors.treadling.active.edge=t,displayColors.treadling.inactive.cell=a,displayColors.treadling.inactive.edge=t,displayColors.tieUp.active.cell=t,displayColors.tieUp.active.edge=t,displayColors.tieUp.inactive.cell=a,displayColors.tieUp.inactive.edge=t,displayColors.threading.active.cell=t,displayColors.threading.active.edge=t,displayColors.threading.inactive.cell=a,displayColors.threading.inactive.edge=t,displayColors.background=t,displayColors.solid=t,displayColors.ground=a}else if("Weave Colors"==M.var.displayMode){let e,r,t=16711935,a=16711680;1==this.colorWeft.palette.length&&this.colorWarp.palette.length>=2?(r=randChoice(Array.from({length:this.colorWarp.palette.length},(e,r)=>r)),e=randChoice(Array.from({length:this.colorWeft.palette.length},(e,r)=>r)),t=this.colorWarp.palette[r],a=this.colorWeft.palette[e],displayColors.backgroundName=M.var.colorWarpNames[r],displayColors.solidName=M.var.colorWarpNames[r],displayColors.groundName=M.var.colorWeftNames[e]):(r=randChoice(Array.from({length:this.colorWeft.palette.length},(e,r)=>r)),e=randChoice(Array.from({length:this.colorWarp.palette.length},(e,r)=>r)),t=this.colorWeft.palette[r],a=this.colorWarp.palette[e],displayColors.backgroundName=M.var.colorWeftNames[r],displayColors.solidName=M.var.colorWeftNames[r],displayColors.groundName=M.var.colorWarpNames[e]);let o=this.colorWarp.palette,l=this.colorWeft.palette;displayColors.treadling.active.cell=l,displayColors.treadling.active.edge=!1,displayColors.treadling.inactive.cell=t,displayColors.treadling.inactive.edge=!1,displayColors.tieUp.active.cell=t,displayColors.tieUp.active.edge=!1,displayColors.tieUp.inactive.cell=a,displayColors.tieUp.inactive.edge=!1,displayColors.threading.active.cell=o,displayColors.threading.active.edge=!1,displayColors.threading.inactive.cell=t,displayColors.threading.inactive.edge=!1,displayColors.background=t,displayColors.solid=t,displayColors.ground=a}renderer.setClearColor(displayColors.background)}visualizeColorGrids(){let e=new THREE.PlaneGeometry(M.var.cellSize,M.var.cellSize);for(let r=0;r<this.colorWarp.length;r++){const t=new THREE.MeshBasicMaterial({color:this.colorWarp.pattern[r]});let a=new THREE.Mesh(e,t);a.position.fromArray(this.colorWarp.posOffset[0][r]),a.userData.myInfo={type:"cell",deleteFlag:this.colorWarp.name},this.colorWarp.mesh[r]=a,a.visible=M.var.colorWarpVisible,scene.add(a)}for(let r=0;r<this.colorWeft.length;r++){const t=new THREE.MeshBasicMaterial({color:this.colorWeft.pattern[r]});let a=new THREE.Mesh(e,t);a.position.fromArray(this.colorWeft.posOffset[r][0]),a.userData.myInfo={type:"cell",deleteFlag:this.colorWeft.name},this.colorWeft.mesh[r]=a,a.visible=M.var.colorWeftVisible,scene.add(a),r>this.colorWeft.length/this.colorWeft.offSet.y&&(a.visible=!1)}}pickSelectedColors(e,r){let t=[],a=[];for(let e=0;e<palettes[r].length;e++)M.var.colorSelectName==palettes[r][e].name&&(t.push(e),a.push(palettes[r][e].p));let o=rWeightedItems(t,a),l=palettes[r][o].name,i=palettes[r][o].arr,n=[];for(let t=0;t<r;t++)n.push({color:new THREE.Color(e[i[t]]),name:i[t]});return shuffleArray(n),M.var.colorGroupName=l,n}twillPattern(e=this.threading,r=M.var.twillSlope,t=M.var.twillOff,a){this.threading.pattern,this.treadling.pattern;if(e==this.threading){let e=M.var.threadingSlope,r=(M.var.threadingOffset,M.var.threadingTranslate),t=this.threading.size.x,a=this.threading.size.y+1,o=this.threading.pattern;for(let l=0;l<a-1;l++){let a=Math.floor((e*l+r)%t);o[a][l]=1}}else if(e==this.treadling){let e=M.var.treadlingSlope,r=(M.var.treadlingOffset,M.var.treadlingTranslate),t=this.treadling.size.y,a=this.treadling.size.x+1,o=this.treadling.pattern;for(let l=0;l<a-1;l++){let a=Math.floor((e*l+r)%t);o[l][a]=1}}}vPattern(e=this.threading){let r=this.threading.pattern,t=this.treadling.pattern;if(e==this.threading){let e=1,t=(M.var.threadingOffset,0);for(let a=0;a<M.var.NUM_THREADS;a++)r[t][a]=1,t+=e,t==M.var.NUM_SHAFTS-1&&(e*=-1),0==t&&a>0&&(e*=-1)}else if(e==this.treadling){let e=1,r=(M.var.treadlingOffset,0);for(let a=0;a<M.var.NUM_PICKS;a++)t[a][r]=1,r+=e,
r==M.var.NUM_TREADLES-1&&(e*=-1),0==r&&a>0&&(e*=-1)}}triWavePattern(e=this.threading){this.threading.pattern,this.treadling.pattern;if(e==this.threading){let e=M.var.threadingSlope,r=(M.var.threadingOffset,M.var.threadingTranslate),t=this.threading.size.x,a=this.threading.size.y+1,o=this.threading.pattern;for(let l=0;l<a-1;l++){let a=Math.abs(Math.floor(triangleWave(l,e,t,r)));o[a][l]=1}}else if(e==this.treadling){let e=M.var.treadlingSlope,r=(M.var.treadlingOffset,M.var.treadlingTranslate),t=this.treadling.size.y,a=this.treadling.size.x+1,o=this.treadling.pattern;for(let l=0;l<a-1;l++){let a=Math.abs(Math.floor(triangleWave(l,e,t,r)));o[l][a]=1}}}randPattern(e=this.threading){let r=this.threading.pattern,t=this.treadling.pattern;if(e==this.threading){let e=Math.floor(rand()*M.var.NUM_SHAFTS),t=randChoice([-1,1]),a=0;a=e;for(let o=0;o<Math.floor(M.var.NUM_THREADS/2);o++){if(r[a][o]=1,a+=t,a>M.var.NUM_SHAFTS-1){let r=0;for(;0==r;)e=Math.floor(rand()*M.var.NUM_SHAFTS),e!=M.var.NUM_SHAFTS-1&&(r=1);t=randChoice([-1,1]),a=e}if(a<0){let r=0;for(;0==r;)e=Math.floor(rand()*M.var.NUM_SHAFTS),0!=e&&(r=1);t=randChoice([-1,1]),a=e}}for(let e=Math.floor(M.var.NUM_THREADS/2);e<M.var.NUM_THREADS;e++)for(let t=0;t<M.var.NUM_SHAFTS;t++)r[t][e]=r[t][e-Math.floor(M.var.NUM_THREADS/2)]}else if(e==this.treadling)for(let e=0;e<M.var.NUM_PICKS;e++)for(let a=0;a<M.var.NUM_TREADLES;a++)t[e][a]=r[a][e]}offsetPattern(e){const r=e.size.x,t=e.size.y;let a;a="treadling"==e.name||"colorWeft"==e.name||"drawdownWarp"==e.name||"drawdownWeft"==e.name?(M.var.verticalSpacing-1)/2:0;let o=[];for(let l=0;l<r;l++){let r=[];for(let o=0;o<t;o++){let t=[o*M.var.cellSize*e.offSet.x+e.position.x+(1-e.offSet.y)/2+a,-l*M.var.cellSize*e.offSet.y+e.position.y+(1-e.offSet.y)/2,0];r.push(t)}o.push(r)}e.posOffset=o}caTieUpGrid(){let e=0,r=!1;for(;(!r||e<1e3)&&(this.makeCA(this),r=this.checkSequentialRuns(5,this.tieUp.pattern,!1),!r);)e++;e>=1e3&&console.error("CA tie up count",e)}makeCA(){const e=()=>Array.from({length:14},()=>Math.round(rand()));let r=!0;for(;r;){let t=0;this.theRules=e(),myCa=new CA(this.theRules,M.var.NUM_SHAFTS,M.var.NUM_TREADLES,scene),myCa.randomSeed(1),myCa.restart();for(let e=0;e<12;e++)myCa.generate();this.tieUp.pattern=myCa.oldBoard;let a=0;for(let e=0;e<this.tieUp.pattern.length;e++)for(let r=0;r<this.tieUp.pattern[e].length;r++)1==this.tieUp.pattern[e][r]&&a++;t++,a>M.var.NUM_SHAFTS*M.var.NUM_SHAFTS*.2&&a<M.var.NUM_SHAFTS*M.var.NUM_SHAFTS*.8?r=!1:t>100&&(r=!1)}}visualizeGrid(e){let r=e.pattern,t=e.name,a=new THREE.PlaneGeometry(M.var.cellSize,M.var.cellSize);for(let o=0;o<r.length;o++)for(let l=0;l<r[o].length;l++){let i=fetchColors(t,r,o,l);const n=new THREE.MeshBasicMaterial({color:i.cell});let s=new THREE.Mesh(a,n);if(s.position.fromArray(e.posOffset[o][l]),s.userData.myInfo={myGrid:r,myCol:l,myRow:o,type:"cell",deleteFlag:t},scene.add(s),0!=i.edge){const a=new THREE.EdgesGeometry(s.geometry),n=new THREE.LineSegments(a,new THREE.LineBasicMaterial({color:i.edge}));n.position.fromArray(e.posOffset[o][l]),n.position.z=10,n.userData.myInfo={myGrid:r,myCol:l,myRow:o,type:"gridline",deleteFlag:t},scene.add(n),o>r.length/e.offSet.y&&(n.visible=!1)}o>r.length/e.offSet.y&&(s.visible=!1)}}computeDrawdown(e=this.threading.pattern,r=this.tieUp.pattern,t=this.treadling.pattern){let a=[],o=0;for(let l of t){let t=new Array(M.var.NUM_THREADS).fill(0),i=[];for(let e=0;e<l.length;e++)if(1===l[e])for(let t=0;t<r[e].length;t++)1===r[e][t]&&i.push(t);for(let r=0;r<M.var.NUM_THREADS;r++)for(let a of i)if(1===e[a][r]){t[r]=1;break}a.push(t);let n,s=0;if(o<=M.var.NUM_TREADLES){1==t[0]?(wPat+=" U ",wPat_print+=" U ",n=1):(wPat+=" O ",wPat_print+=" O ",n=0);for(let e=0;e<M.var.NUM_SHAFTS;e++)1==n&&1==t[e]||0==n&&0==t[e]||(1==n&&0==t[e]?(wPat=wPat+s+" O ",wPat_print=wPat_print+s+" O ",n=0,s=0):0==n&&1==t[e]&&(wPat=wPat+s+" U ",wPat_print=wPat_print+s+" U ",n=1,s=0)),s++;wPat=wPat+s+" REPEAT",wPat="<div>"+wPat+"</div>\n",wPat_print=wPat_print+s+" REPEAT\n"}o++}wPat+="REPEAT",wPat_print+="REPEAT",this.drawdownWarp.pattern=a,this.drawdownWeft.pattern=a;let l=this.checkSequentialRuns(10),i=100;l?this.drawdownCheckCount=0:this.drawdownCheckCount<i?(this.resetPattern(this.tieUp),this.caTieUpGrid(),this.computeDrawdown(),this.drawdownCheckCount++):console.warn(`reached Maximum drawdown check of ${i}`)}visualizeDrawdown(e=this.drawdownWarp){let r=e.pattern,t=(e.position.x,e.position.y,0),a=new THREE.PlaneBufferGeometry(M.var.cellSize,M.var.cellSize),o=.9999;a=new THREE.PlaneBufferGeometry(M.var.cellSize*this.drawdownWarp.offSet.x,M.var.cellSize*this.drawdownWarp.offSet.y);for(let e=0;e<r.length;e++)for(let l=0;l<M.var.NUM_THREADS;l++){let i,n;i=this.colorWarp.pattern[l],t=this.drawdownWarp.pattern[e][l];let s=Math.round(220*i.r),d=Math.round(220*i.g),c=Math.round(220*i.b);n=new THREE.Color(`rgb(${s}, ${d}, ${c})`);const h=new THREE.MeshBasicMaterial({color:i}),p=new THREE.Mesh(a,h);let g,v;if(p.position.fromArray(this.drawdownWarp.posOffset[e][l]),p.position.z=2*t,scene.add(p),M.var.drawEdges){const t=p.geometry.attributes.position.array;let a=t[1]+M.var.verticalSpacing;0!=e&&e!=Math.ceil((r.length-1)/M.var.verticalSpacing)||(a=.5);const i=new THREE.Vector3(t[0]*o,+a,t[2]).add(p.position),s=new THREE.Vector3(t[3]*o,+a,t[5]).add(p.position),d=new THREE.Vector3(t[6]*o,-a,t[8]).add(p.position),c=new THREE.Vector3(t[9]*o,-a,t[11]).add(p.position);1===r[e][l]&&(g=new THREE.Line((new THREE.BufferGeometry).setFromPoints([i,d]),new THREE.LineBasicMaterial({color:n})),v=new THREE.Line((new THREE.BufferGeometry).setFromPoints([c,s]),new THREE.LineBasicMaterial({color:n})),scene.add(g),scene.add(v))}e>r.length/this.drawdownWeft.offSet.y&&(p.visible=!1,M.var.drawEdges&&(g&&(g.visible=!1),v&&(v.visible=!1)))}a=new THREE.PlaneBufferGeometry(M.var.cellSize,M.var.cellSize);for(let e=0;e<r.length;e++)for(let o=0;o<M.var.NUM_THREADS;o++){let l,i;l=this.colorWeft.pattern[o],t=this.drawdownWeft.pattern[e][o];let n=Math.round(220*l.r),s=Math.round(220*l.g),d=Math.round(220*l.b);i=new THREE.Color(`rgb(${n}, ${s}, ${d})`);const c=new THREE.MeshBasicMaterial({color:l}),h=new THREE.Mesh(a,c);let p,g;if(h.position.fromArray(this.drawdownWeft.posOffset[o][e]),h.position.z=t,scene.add(h),M.var.drawEdges){const t=h.geometry.attributes.position.array,a=new THREE.Vector3(t[0],t[1],t[2]).add(h.position),l=new THREE.Vector3(t[3],t[4],t[5]).add(h.position),n=new THREE.Vector3(t[6],t[7],t[8]).add(h.position),s=new THREE.Vector3(t[9],t[10],t[11]).add(h.position);if(10===r[e][o]){}else p=new THREE.Line((new THREE.BufferGeometry).setFromPoints([a,l]),new THREE.LineBasicMaterial({color:i})),g=new THREE.Line((new THREE.BufferGeometry).setFromPoints([n,s]),new THREE.LineBasicMaterial({color:i})),scene.add(p),scene.add(g)}o>r.length/this.drawdownWeft.offSet.y&&(h.visible=!1,M.var.drawEdges&&(p&&(p.visible=!1),g&&(g.visible=!1)))}}removeDrawdown(){let e=[...scene.children];for(let r=0;r<e.length;r++){let t=e[r];void 0===t.userData.myInfo&&scene.remove(t)}}removeGrid(e=["none"]){Array.isArray(e)||(e=[e]);let r=[...scene.children];for(let t=0;t<r.length;t++){let a=r[t];try{e.includes(a.userData.myInfo.deleteFlag)&&scene.remove(a)}catch{}}console.log("removed grid")}addDrawdownText(){const e=document.createElement("div");e.id="drawdownText",e.innerHTML=wPat;const r=document.querySelector("canvas");r?r.insertAdjacentElement("afterend",e):console.error("Canvas not found. Make sure this function is called after the canvas has been added to the DOM.")}checkSequentialRuns(e=M.var.maxRun,r=this.drawdownWarp.pattern,t=!0){const a=r.length,o=r[0].length;for(let l=0;l<a;l++){let a=1;for(let i=1;i<o;i++)if(r[l][i]===r[l][i-1]){if(a++,a>=e)return t&&this.sequenceRepair(!1),!1}else a=1}for(let l=0;l<o;l++){let o=1;for(let i=1;i<a;i++)if(r[i][l]===r[i-1][l]){if(o++,o>=e)return t&&this.sequenceRepair(!1),!1}else o=1}return t&&this.sequenceRepair(!0),!0}sequenceRepair(e){e?(renderer.setClearColor(displayColors.background),M.var.passedLengthTest=!0):M.var.passedLengthTest=!1}}class CA{constructor(e,r,t,a){this.oldBoard=[],this.newBoard=[],this.on=[],this.genCount=0,this.gens=M.var.maxGen+1,this.seeds=[],this.COLS=t,this.ROWS=r,this.rule=e,this.scene=a,this.oldBoard=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0)),this.newBoard=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0)),this.seeds=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0))}reset(){this.oldBoard=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0)),this.genCount=0}restart(){this.genCount=0,this.oldBoard=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0)),this.newBoard=Array.from({length:this.ROWS},()=>Array(this.COLS).fill(0));for(let e=0;e<this.ROWS;e++)for(let r=0;r<this.COLS;r++)1==this.seeds[e][r]&&(this.oldBoard[e][r]=1);this.seeds=Array(this.ROWS).fill(Array(this.COLS).fill(0)),this.genCount++}randomSeed(e){this.on[this.genCount]=[];let r=Math.floor(this.ROWS/2),t=Math.floor(this.COLS/2);this.seeds[r][t]=1,this.seeds[r+2][t+2]=1,this.seeds[r-2][t-2]=1;let a=rand();if(a<=.33)for(let a=0;a<e;a++){let e=Math.round(.33*this.ROWS),a=Math.floor(rand()*(2*e+1))-e+r,o=Math.floor(rand()*(2*e+1))-e+t;a<0||o<0||a>this.ROWS-1||o>this.COLS-1||(this.seeds[a][o]=1)}this.genCount++}generate(){this.on[this.genCount]=[];for(let e=0;e<this.ROWS;e++)for(let r=0;r<this.COLS;r++){let t=0;const a=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];for(let o=0;o<a.length;o++){const[l,i]=a[o],n=e+l,s=r+i;n>=0&&n<this.ROWS&&s>=0&&s<this.COLS&&1===this.oldBoard[n][s]&&t++}1==this.oldBoard[e][r]&&(0==t&&(this.newBoard[e][r]=this.rule[0]),1==t&&(this.newBoard[e][r]=this.rule[1]),2==t&&(this.newBoard[e][r]=this.rule[2]),3==t&&(this.newBoard[e][r]=this.rule[3]),4==t&&(this.newBoard[e][r]=this.rule[4]),5==t&&(this.newBoard[e][r]=this.rule[5]),6==t&&(this.newBoard[e][r]=this.rule[6])),0==this.oldBoard[e][r]&&(0==t&&(this.newBoard[e][r]=this.rule[7]),1==t&&(this.newBoard[e][r]=this.rule[8]),2==t&&(this.newBoard[e][r]=this.rule[9]),3==t&&(this.newBoard[e][r]=this.rule[10]),4==t&&(this.newBoard[e][r]=this.rule[11]),5==t&&(this.newBoard[e][r]=this.rule[12]),6==t&&(this.newBoard[e][r]=this.rule[13]))}let e=this.oldBoard;this.oldBoard=this.newBoard,this.newBoard=e,this.genCount++}}init(),render(),document.addEventListener("keypress",function(e){"s"===e.key||"S"==e.key?saveLargeCanvas("Enlace",2400):"t"!==e.key&&"T"!=e.key||(M.var.textVisible=!M.var.textVisible,toggleText())});